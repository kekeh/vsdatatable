/* 
*  Name: vsdatatable 
*  Description: Simple single page datatable - AngularJS UI component 
*  Version: 0.0.1 
*  Author: kekeh 
*  License: MIT 
 *  Date: 2015-06-07
*/ 
angular.module('template-vsdatatable-0.0.1.html', ['templates/vscoltogglemenu.html', 'templates/vsdatatable.html', 'templates/vspaginator.html']);

angular.module("templates/vscoltogglemenu.html", []).run(["$templateCache", function($templateCache) {
  $templateCache.put("templates/vscoltogglemenu.html",
    "<div>\n" +
    "    <span class=\"icon icon-selections actionIcon\" ng-click=\"colTogglerShowClicked($event);\" ng-keydown=\"colTogglerShowClicked($event)\" \n" +
    "            tabindex=\"0\" overlay-window=\"{text:'{{options.columnToggler.btnTooltip}}',overflow:false}\"></span>  \n" +
    "    <div class=\"colTogglerMenu\" ng-show=\"colTogglerShow\">\n" +
    "        <div class=\"colTogglerTitle\" ng-show=\"options.columnToggler.menuTitle !== undefined\">\n" +
    "            <span class=\"colTogglerTitleTxt\">{{options.columnToggler.menuTitle}}</span> \n" +
    "            <span class=\"icon icon-cross actionIcon colTogglerCloseIcon\" ng-click=\"colTogglerShowClicked($event);\" \n" +
    "                  ng-keydown=\"colTogglerShowClicked($event)\" tabindex=\"0\"></span> \n" +
    "        </div> \n" +
    "        <div class=\"colTogglerMenuItem\" ng-repeat=\"h in options.columns\" ng-class=\"{'selectedColTogglerMenuItem':h.visible}\" \n" +
    "            ng-click=\"colToggleMenuClicked($event,h);\" \n" +
    "            ng-keydown=\"colToggleMenuClicked($event,h);\"\n" +
    "            ng-model=\"h.visible\" tabindex=\"0\"> \n" +
    "            <div class=\"colTogglerMenuItemTxt\">{{h.label}}</div>\n" +
    "            <div class=\"colTogglerMenuItemIcon\">\n" +
    "                <span class=\"icon icon-check actionIcon\" ng-show=\"h.visible\"></span> \n" +
    "            </div>\n" +
    "        </div>\n" +
    "    </div>\n" +
    "</div>\n" +
    "\n" +
    "");
}]);

angular.module("templates/vsdatatable.html", []).run(["$templateCache", function($templateCache) {
  $templateCache.put("templates/vsdatatable.html",
    "<div class=\"vsdatatable\">\n" +
    "\n" +
    "    <div class=\"caption\" ng-show=\"options.caption.visible\">\n" +
    "        <table style=\"width:100%;\">\n" +
    "            <tr>\n" +
    "                <td class=\"captionColToggler\" ng-show=\"options.columnToggler.visible\" ng-click=\"$event.stopPropagation();\">\n" +
    "                    <div col-toggle-menu></div>\n" +
    "                </td>\n" +
    "                <td class=\"captionTitle\">\n" +
    "                    <span ng-if=\"options.caption.text!==undefined\">{{options.caption.text}}</span>\n" +
    "                </td>\n" +
    "                <td class=\"captionFilter\">\n" +
    "                    <div ng-show=\"options.filter.global!==undefined&&options.filter.global||\n" +
    "                                  options.filter.column!==undefined&&options.filter.column\">\n" +
    "                        <input ng-show=\"filterFocus&&options.filter.global\"\n" +
    "                               placeholder=\"{{options.filter.globalPlaceholder}}\"\n" +
    "                               type=\"text\"\n" +
    "                               ng-model=\"globalFilter\"\n" +
    "                               ng-model-options=\"{debounce:options.filter.autoFilter.useAutoFilter?options.filter.autoFilter.filterDelay:config.FILTER_EXECUTION_DELAY}\"\n" +
    "                               data-ng-trim=\"false\"\n" +
    "                               filter-focus/>\n" +
    "                        <span class=\"icon icon-check actionIcon\" ng-show=\"filterFocus&&options.filter.global&&options.filter.filterBtn.visible\"\n" +
    "                              overlay-window=\"{text:'{{options.filter.filterBtn.filterBtnTooltip}}',overflow:false}\"\n" +
    "                              ng-click=\"executeFilter();\" ng-keydown=\"$event.which===13?executeFilter():null\" tabindex=\"0\"></span>\n" +
    "                        <span class=\"icon icon-search actionIcon\"\n" +
    "                              overlay-window=\"{text:'{{!filterFocus?options.filter.showFilterBtnTooltip:options.filter.hideFilterBtnTooltip}}',overflow:false}\"\n" +
    "                              ng-click=\"filterBtnClick($event);\"\n" +
    "                              ng-keydown=\"filterBtnClick($event)\"\n" +
    "                              tabindex=\"0\"></span>\n" +
    "                    </div>\n" +
    "                </td>\n" +
    "            </tr>\n" +
    "        </table>\n" +
    "    </div>\n" +
    "\n" +
    "    <table class=\"tableRows\">\n" +
    "        <thead class=\"tableHeader\" ng-if=\"options.headerVisible\">\n" +
    "        <tr class=\"headerRow\">\n" +
    "            <th class=\"headerCol textOverflow\"\n" +
    "                ng-show=\"h.visible===undefined||h.visible\"\n" +
    "                ng-style=\"{'width':h.width.number+h.width.unit, 'cursor':h.sorting?'pointer':'default'}\"\n" +
    "                ng-class=\"sort.col===h.prop&&h.sorting?'selectedHeaderCol':''\"\n" +
    "                ng-repeat=\"h in options.columns\"\n" +
    "                ng-click=\"h.sorting?sortByCol($event,h.prop):null\"\n" +
    "                ng-keydown=\"h.sorting?sortByCol($event,h.prop):null\"\n" +
    "                overlay-window=\"{text:'{{h.label}}',overflow:true}\">\n" +
    "                {{h.label}}\n" +
    "                    <span class=\"icon sortColIcon\" ng-if=\"h.sorting\"\n" +
    "                          ng-class=\"{'selectedHeaderCol':sort.col===h.prop&&h.sorting,\n" +
    "                          'icon-sort':h.sorting,           \n" +
    "                          'icon-down':sort.col===h.prop&&sort.reverse,\n" +
    "                          'icon-up':sort.col===h.prop&&!sort.reverse}\" tabindex=\"0\"></span>\n" +
    "                    <span class=\"icon icon-cross sortColIcon\" ng-if=\"h.sorting&&sort.col===h.prop\"\n" +
    "                          ng-click=\"sortByCol($event,'');\" ng-keydown=\"sortByCol($event,'');\" tabindex=\"0\"></span>\n" +
    "            </th>\n" +
    "            <th class=\"headerCol headerColAction\" ng-if=\"options.useTemplates\">\n" +
    "                <span>{{options.actionColumnText}}</span>\n" +
    "                    <span class=\"icon icon-plus actionIcon addItemIcon\" ng-if=\"options.templates.add.actionBtnShow\"\n" +
    "                          ng-click=\"addRow();\" ng-keydown=\"$event.which===13?addRow():null\"\n" +
    "                          overlay-window=\"{text:'{{options.templates.add.btnTooltip}}',overflow:false}\" tabindex=\"0\"></span>\n" +
    "            </th>\n" +
    "        </tr>\n" +
    "\n" +
    "        <tr ng-if=\"options.filter.column!==undefined&&options.filter.column&&filterFocus\">\n" +
    "            <th class=\"headerCol\" ng-repeat=\"h in options.columns\" ng-show=\"h.visible===undefined||h.visible\"\n" +
    "                col-filter-template=\"h\">\n" +
    "            </th>\n" +
    "            <th class=\"headerCol headerColAction\"></th>\n" +
    "        </tr>\n" +
    "\n" +
    "        </thead>\n" +
    "        <tbody class=\"tableBody\">\n" +
    "        <tr class=\"bodyRow\" ng-repeat=\"obj in !extDataPagination?\n" +
    "                filteredItems.slice(paginator.visiblePageIdx*pageSize.rows, paginator.visiblePageIdx*pageSize.rows+pageSize.rows): \n" +
    "                filteredItems track by $index\"\n" +
    "            ng-class-odd=\"'oddRow'\" ng-class-even=\"'evenRow'\"\n" +
    "            ng-click=\"rowClicked($event, obj)\"\n" +
    "            ng-keydown=\"rowClicked($event, obj)\"\n" +
    "            ng-class=\"{'selectedRow':isRowSelected(obj)}\"\n" +
    "            table-body-row tabindex=\"0\">\n" +
    "            <td class=\"bodyCol\" ng-repeat=\"k in options.columns track by $index\" ng-if=\"options.columns[$index].visible===undefined||options.columns[$index].visible\">\n" +
    "                <div class=\"textOverflow\" ng-style=\"{'text-align':k.textAlign}\" overlay-window=\"{text:'{{obj[k.prop]}}',overflow:true}\">\n" +
    "                    {{obj[k.prop]}}\n" +
    "                </div>\n" +
    "            </td>\n" +
    "            <td class=\"bodyCol bodyColAction\" ng-if=\"options.useTemplates\">\n" +
    "                    <span class=\"icon icon-edit actionIcon\" ng-if=\"options.templates.edit.actionBtnShow\"\n" +
    "                          ng-click=\"editRow($event, obj);$event.stopPropagation();\"\n" +
    "                          ng-keydown=\"editRow($event, obj);$event.stopPropagation();\"\n" +
    "                          overlay-window=\"{text:'{{options.templates.edit.btnTooltip}}',overflow:false}\"\n" +
    "                          tabindex=\"0\"></span> \n" +
    "                    <span class=\"icon icon-clear actionIcon\" ng-if=\"options.templates.delete.actionBtnShow\"\n" +
    "                          ng-click=\"deleteRow($event, obj);$event.stopPropagation();\"\n" +
    "                          ng-keydown=\"deleteRow($event, obj);$event.stopPropagation();\"\n" +
    "                          overlay-window=\"{text:'{{options.templates.delete.btnTooltip}}',overflow:false}\"\n" +
    "                          tabindex=\"0\"></span> \n" +
    "                    <span class=\"icon icon-view actionIcon\" ng-if=\"options.templates.view.actionBtnShow\"\n" +
    "                          ng-click=\"viewRow($event, obj);$event.stopPropagation();\"\n" +
    "                          ng-keydown=\"viewRow($event, obj);$event.stopPropagation();\"\n" +
    "                          overlay-window=\"{text:'{{options.templates.view.btnTooltip}}',overflow:false}\"\n" +
    "                          tabindex=\"0\"></span>\n" +
    "            </td>\n" +
    "        </tr>\n" +
    "        </tbody>\n" +
    "    </table>\n" +
    "\n" +
    "    <div class=\"tableFooter\" table-paginator></div>\n" +
    "\n" +
    "    <script type=\"text/ng-template\" id=\"rowExtender.html\">\n" +
    "        <td class=\"bodyCol\" colspan=\"{{visibleColCount+1}}\">\n" +
    "            <div ng-include src=\"template.path\"></div>\n" +
    "        </td>\n" +
    "    </script>\n" +
    "\n" +
    "</div>\n" +
    "");
}]);

angular.module("templates/vspaginator.html", []).run(["$templateCache", function($templateCache) {
  $templateCache.put("templates/vspaginator.html",
    "<table style=\"width: 100%;\">\n" +
    "    <tbody>\n" +
    "        <tr class=\"paginator\" ng-if=\"options.paginator.visible\">     \n" +
    "            <td>\n" +
    "                <div style=\"float:left;\">\n" +
    "                    <span class=\"paginatorTxt\">{{options.paginator.totalItemsTxt}}</span>\n" +
    "                    <span class=\"paginatorTotalNbr\">{{totalCount}}</span>\n" +
    "                    <span class=\"paginatorPagesNbr\" ng-if=\"options.paginator.visible\">({{paginator.visiblePageIdx+1}}/{{totalPages===0?1:totalPages}})</span>\n" +
    "                </div>\n" +
    "            </td>\n" +
    "            <td>\n" +
    "                <button class=\"paginatorBtn\"\n" +
    "                        ng-style=\"{'margin-left':$index>0?'-1px':'0'}\"\n" +
    "                        ng-class=\"{'selectedPaginatorBtn':b.id===paginator.visiblePageIdx+1,\n" +
    "                                   'disabledPaginatorBtn':isDisabledBtn(b),\n" +
    "                                   'paginatorBtnNbr': !isNavigateBtn(b),\n" +
    "                                   'paginatorBtnSet': b===config.PAGINATOR_BTN_PREV_SET||b===config.PAGINATOR_BTN_NEXT_SET,\n" +
    "                                   'paginatorBtnAll': b===config.PAGINATOR_BTN_FIRST||b===config.PAGINATOR_BTN_LAST}\"\n" +
    "                        ng-click=\"paginatorBtnClick(b,$index)\" \n" +
    "                        ng-repeat=\"b in paginatorButtons track by $index\">\n" +
    "                            {{b.label}}\n" +
    "                </button> \n" +
    "            </td>\n" +
    "            <td>\n" +
    "                <div style=\"float:right;\">\n" +
    "                    <span class=\"paginatorTxt\">{{options.paginator.pageSizeTxt}}</span> \n" +
    "                    <button class=\"paginatorBtn paginatorBtnPageSize\" \n" +
    "                            ng-style=\"{'margin-left':$index>0?'-1px':'0'}\"  \n" +
    "                            ng-class=\"{'selectedPaginatorBtn':o.rows===pageSize.rows}\"\n" +
    "                            ng-click=\"pageSizeButtonClick(o)\"\n" +
    "                            ng-repeat=\"o in pageSizeOptions track by $index\">{{o.label}}</button>  \n" +
    "                </div>\n" +
    "            </td>\n" +
    "        </tr>\n" +
    "    </tbody>\n" +
    "</table>\n" +
    "\n" +
    "");
}]);

angular.module("vsdatatable", ["template-vsdatatable-0.0.1.html"]).constant("vsdatatableConfig", {
  OVERLAY_SHOW_DELAY: 500,
  FILTER_EXECUTION_DELAY: 500,
  PAGINATOR_MAX_BTN_COUNT: 6,
  PAGINATOR_BTN_BACK: {id: "b", label: "back"},
  PAGINATOR_BTN_NEXT: {id: "n", label: "next"},
  PAGINATOR_BTN_FIRST: {id: "f", label: "first"},
  PAGINATOR_BTN_LAST: {id: "l", label: "last"},
  PAGINATOR_BTN_PREV_SET: {id: "ps", label: "..."},
  PAGINATOR_BTN_NEXT_SET: {id: "ns", label: "..."},
  PAGINATOR_EVENT: "vsdatatable.paginatorEvent",
  FILTER_FOCUS_EVENT: "vsdatatable.filterFocusEvent",
  SET_EXT_PAGINATION_DATA_EVENT: "vsdatatable.setExtPaginationData",
  OPER_PHASE_BEGIN: "BEGIN",
  OPER_PHASE_END: "END",
  OPER_ADD: "ADD",
  OPER_EDIT: "EDIT",
  OPER_DELETE: "DELETE",
  OPER_VIEW: "VIEW",
  EXT_INIT: "i",
  EXT_SORT: "s",
  EXT_FLT: "f",
  EXT_BTN: "b",
  FILTER_CONTAIN: "contain",
  FILTER_EXACT: "exact",
  ROW_SELECT: "SELECT",
  ROW_DESELECT: "DESELECT"
}).factory("vsdatatableEvent", ["vsdatatableConfig", function (a) {
  var b = {};
  return b.setExtPaginationData = function (b, c, d) {
    b.$broadcast(a.SET_EXT_PAGINATION_DATA_EVENT, {data: c, totalCount: d})
  }, b
}]).service("vsdatatableService", ["vsdatatableConfig", function (a) {
  var b = {};
  return b.isUndefined = function (a) {
    return angular.isUndefined(a)
  }, b.isEqual = function (a, b) {
    return angular.equals(a, b)
  }, b.isObject = function (a) {
    return angular.isObject(a)
  }, b.setFilterFocus = function (b) {
    b.$broadcast(a.FILTER_FOCUS_EVENT)
  }, b.paginatorEvent = function (b) {
    b.$broadcast(a.PAGINATOR_EVENT)
  }, b
}]).directive("vsdatatable", ["$compile", "$templateCache", "$filter", "vsdatatableConfig", "vsdatatableService", function (a, b, c, d, e) {
  return {
    restrict: "EA",
    templateUrl: "templates/vsdatatable.html",
    scope: {options: "="},
    controller: ["$scope", function (a) {
      a.config = d, a.filteredItems = [], a.totalCount = 0, a.selectedRows = [], a.colTogglerShow = !1
    }],
    link: function (f, g, h) {
      function i(a) {
        if (e.isEqual(f.options.row.selection, 1) || e.isEqual(f.options.row.selection, 2)) {
          var b = f.selectedRows.indexOf(a);
          e.isEqual(b, -1) || (f.selectedRows.splice(b, 1), f.notifyRowSelect(f.config.ROW_DESELECT, a))
        }
      }

      function j(a) {
        angular.forEach(a, function (b, c) {
          a[c] = ""
        })
      }

      function k(a) {
        var b = {};
        return angular.forEach(a, function (a, c) {
          e.isEqual(a, "") || (b[c] = a)
        }), b
      }

      function l() {
        f.filteredItems = f.options.data.items, e.isEqual(f.globalFilter, "") || (f.filteredItems = G(f.filteredItems, f.globalFilter));
        var a = k(f.columnFilter.contain);
        e.isEqual(a, {}) || (f.filteredItems = G(f.filteredItems, a));
        var b = k(f.columnFilter.exact);
        e.isEqual(b, {}) || (f.filteredItems = G(f.filteredItems, b, function (a, b) {
          return e.isEqual(a.toString(), b) || e.isEqual(b, "")
        })), f.totalCount = f.filteredItems.length
      }

      function m() {
        e.isEqual(f.sort.col, "") || (f.filteredItems = F(f.filteredItems, f.sort.col, f.sort.reverse))
      }

      function n() {
        if (f.options.filter.global && (C = f.$watch("filterFocus", p)), f.options.filter.global || f.options.filter.column) {
          var a = o();
          f.options.filter.autoFilter.useAutoFilter && (a += "globalFilter", D = f.$watch(a, q))
        }
        f.extDataPagination || (E = f.$watch("options.data.items.length", r))
      }

      function o() {
        var a = "";
        return angular.forEach(f.options.columns, function (b) {
          e.isUndefined(b.filter) || e.isUndefined(b.filter.template) || (f.columnFilter[b.filter.match][b.prop] = "", a += "columnFilter." + b.filter.match + "." + b.prop + " + ")
        }), a
      }

      function p(a, b) {
        !e.isEqual(a, b) && a && e.setFilterFocus(f)
      }

      function q(a, b) {
        e.isObject(a) && e.isEqual(b.contain, {}) && e.isEqual(b.exact, {}) || e.isEqual(a, b) || f.executeFilter()
      }

      function r() {
        f.filteredItems = f.options.data.items, f.totalCount = f.filteredItems.length, w(!0, !0), e.paginatorEvent(f)
      }

      function s(a) {
        return angular.element(a.target).parent().parent()
      }

      function t(c) {
        u(), A = angular.element(b.get("rowExtender.html")), e.isEqual(B.oper, f.config.OPER_ADD) ? c.prepend(A) : c.after(A), a(A)(f)
      }

      function u() {
        e.isEqual(A, null) || (A.remove(), A = null)
      }

      function v(a) {
        e.isUndefined(f.options.data.dataOperationCb) || f.options.data.dataOperationCb(a, B.oper, B.dataOld, e.isEqual(a, f.config.OPER_PHASE_BEGIN) ? {} : B.dataNew)
      }

      function w(a, b) {
        a && (f.sort = {col: "", reverse: !1}), b && f.resetFilter()
      }

      function x() {
        var a = parseInt(100 / f.options.columns.length - 1);
        f.visibleColCount = 0, angular.forEach(f.options.columns, function (b) {
          f.visibleColCount = e.isUndefined(b.visible) || b.visible ? f.visibleColCount + 1 : f.visibleColCount, e.isUndefined(b.width) && (b.width = {
            number: a,
            unit: "%"
          })
        })
      }

      function y() {
        f.extDataPagination = f.options.data.extDataPagination, x(), n()
      }

      f.filterFocus = !1, f.sort = {col: "", reverse: !1}, f.globalFilter = "", f.columnFilter = {
        contain: {},
        exact: {}
      };
      var z = null, A = null, B = {}, C = null, D = null, E = null, F = c("orderBy"), G = c("filter");
      f.addRow = function () {
        B = {
          oper: f.config.OPER_ADD,
          dataOld: {},
          dataNew: {}
        }, v(f.config.OPER_PHASE_BEGIN), f.template = f.options.templates.add;
        var a = angular.element(g[0].querySelector(".tableRows .tableBody"));
        t(a)
      }, f.editRow = function (a, b) {
        f.checkEvent(a) && (B = {
          oper: f.config.OPER_EDIT,
          dataOld: b,
          dataNew: angular.copy(b)
        }, v(f.config.OPER_PHASE_BEGIN), f.template = f.options.templates.edit, t(s(a)))
      }, f.deleteRow = function (a, b) {
        f.checkEvent(a) && (B = {
          oper: f.config.OPER_DELETE,
          dataOld: b,
          dataNew: {}
        }, v(f.config.OPER_PHASE_BEGIN), f.template = f.options.templates["delete"], t(s(a)))
      }, f.viewRow = function (a, b) {
        f.checkEvent(a) && (B = {
          oper: f.config.OPER_VIEW,
          dataOld: b,
          dataNew: {}
        }, v(f.config.OPER_PHASE_BEGIN), f.template = f.options.templates.view, t(s(a)))
      }, f.acceptClicked = function () {
        u(), f.extDataPagination ? (v(f.config.OPER_PHASE_END), e.isEqual(B.oper, f.config.OPER_VIEW) || f.paginationOperation(B.oper)) : ((e.isEqual(B.oper, f.config.OPER_ADD) || e.isEqual(B.oper, f.config.OPER_DELETE)) && f.resetFilter(), v(f.config.OPER_PHASE_END), e.isEqual(B.oper, f.config.OPER_VIEW) || l()), i(B.dataOld)
      }, f.cancelClicked = function () {
        u()
      }, f.sortByCol = function (a, b) {
        a.stopPropagation(), f.checkEvent(a) && (f.sort = e.isEqual(f.sort.col, b) ? {
          col: b,
          reverse: !f.sort.reverse
        } : {
          col: b,
          reverse: !1
        }, f.extDataPagination || (e.isEqual(b, "") && l(), m()), f.paginationOperation(d.EXT_SORT))
      }, f.notifyRowSelect = function (a, b) {
        e.isUndefined(f.options.row.rowSelectCb) || f.options.row.rowSelectCb(a, b)
      }, f.$on(d.SET_EXT_PAGINATION_DATA_EVENT, function (a, b) {
        f.filteredItems = b.data, f.totalCount = b.totalCount, e.isEqual(z, d.EXT_BTN) || e.isEqual(z, d.OPER_EDIT) || e.paginatorEvent(f)
      }), f.getColumns = function () {
        return f.options.columns
      }, f.getOperationDataObject = function () {
        return e.isEqual(B.oper, f.config.OPER_ADD) || e.isEqual(B.oper, f.config.OPER_EDIT) ? {
          oper: B.oper,
          data: B.dataNew
        } : {oper: B.oper, data: B.dataOld}
      }, f.paginationOperation = function (a) {
        f.extDataPagination && (z = a, (e.isEqual(a, d.OPER_ADD) || e.isEqual(a, d.OPER_DELETE) || e.isEqual(a, d.EXT_FLT)) && (f.paginator.visiblePageIdx = 0), f.options.data.extPaginationOperationCb({
          columnFilter: f.columnFilter,
          globalFilter: f.globalFilter,
          page: f.paginator.visiblePageIdx + 1,
          pageSize: f.pageSize.rows,
          sort: f.sort
        }))
      }, f.filterBtnClick = function (a) {
        f.checkEvent(a) && (f.filterFocus = !f.filterFocus, f.filterFocus || f.resetFilter())
      }, f.executeFilter = function () {
        f.extDataPagination ? f.paginationOperation(d.EXT_FLT) : (l(), m(), e.paginatorEvent(f))
      }, f.resetFilter = function () {
        f.globalFilter = "", j(f.columnFilter.contain), j(f.columnFilter.exact), f.options.filter.autoFilter.useAutoFilter || f.executeFilter()
      }, f.checkEvent = function (a) {
        return e.isEqual(a.which, 1) || e.isEqual(a.which, 13)
      };
      var H = g.on("click", function (a) {
        1 === a.which && f.colTogglerShow && (f.colTogglerShow = !1, f.$apply())
      });
      f.$on("$destroy", function () {
        e.isEqual(C, null) || C(), e.isEqual(D, null) || D(), e.isEqual(E, null) || E(), f.$off(d.SET_EXT_PAGINATION_DATA_EVENT), g.off("click", H)
      }), y()
    }
  }
}]).directive("filterFocus", ["$timeout", "vsdatatableConfig", function (a, b) {
  return {
    restrict: "A", scope: {}, link: function (c, d, e) {
      c.$on(b.FILTER_FOCUS_EVENT, function () {
        a(function () {
          d[0].focus()
        })
      }), c.$on("$destroy", function () {
        c.$off(b.FILTER_FOCUS_EVENT)
      })
    }
  }
}]).directive("colFilterTemplate", ["$compile", function (a) {
  return {
    restrict: "A", scope: !1, link: function (b, c, d) {
      var e = b.$eval(d.colFilterTemplate);
      if (b.columnFilter[b.config.FILTER_CONTAIN].hasOwnProperty(e.prop) || b.columnFilter[b.config.FILTER_EXACT].hasOwnProperty(e.prop)) {
        var f = angular.copy(e.filter.template), g = b.columnFilter[b.config.FILTER_CONTAIN].hasOwnProperty(e.prop) ? b.config.FILTER_CONTAIN : b.config.FILTER_EXACT;
        f = f.replace("COLUMN_PROP_VALUE", "columnFilter." + g + "." + e.prop + '"');
        var h = angular.element(f);
        a(h)(b), c.append(h)
      }
    }
  }
}]).directive("tableBodyRow", ["vsdatatableService", function (a) {
  return {
    restrict: "A", scope: !1, link: function (b, c, d) {
      function e(c) {
        return (a.isEqual(c.which, 1) || a.isEqual(c.which, 13)) && (1 === b.options.row.selection || 2 === b.options.row.selection)
      }

      function f() {
        c.addClass("hoverRow")
      }

      function g() {
        c.removeClass("hoverRow")
      }

      b.options.row.hover && (c.on("mouseenter", f), c.on("mouseleave", g)), b.rowClicked = function (c, d) {
        if (e(c)) {
          var f = b.config.ROW_SELECT, g = b.selectedRows.indexOf(d);
          1 === b.options.row.selection && a.isEqual(g, -1) ? (b.selectedRows.length > 0 && b.notifyRowSelect(b.config.ROW_DESELECT, b.selectedRows[0]), b.selectedRows[0] = d) : 1 !== b.options.row.selection || a.isEqual(g, -1) ? 2 === b.options.row.selection && a.isEqual(g, -1) ? b.selectedRows.push(d) : 2 !== b.options.row.selection || a.isEqual(g, -1) || (b.selectedRows.splice(g, 1), f = b.config.ROW_DESELECT) : (b.selectedRows.splice(0, 1), f = b.config.ROW_DESELECT), b.notifyRowSelect(f, d)
        }
      }, b.isRowSelected = function (c) {
        return !a.isEqual(b.selectedRows.indexOf(c), -1)
      }, b.$on("$destroy", function () {
        b.options.row.hover && (c.off("mouseenter", f), c.off("mouseleave", g))
      })
    }
  }
}]).directive("tablePaginator", ["vsdatatableService", "vsdatatableConfig", function (a, b) {
  return {
    restrict: "A", scope: !1, templateUrl: "templates/vspaginator.html", link: function (c, d, e) {
      function f(b) {
        a.isEqual(b, c.config.PAGINATOR_BTN_FIRST) ? h(0, b) : a.isEqual(b, c.config.PAGINATOR_BTN_BACK) ? a.isEqual(c.paginator.visiblePageIdx - c.paginator.pageFirstIdx, 0) ? h(c.paginator.visiblePageIdx - q, b) : i(c.paginator.visiblePageIdx - 1, c.paginator.pageFirstIdx) : a.isEqual(b, c.config.PAGINATOR_BTN_PREV_SET) ? h(c.paginator.pageFirstIdx - q, b) : a.isEqual(b, c.config.PAGINATOR_BTN_LAST) ? h(c.totalPages - 1, b) : a.isEqual(b, c.config.PAGINATOR_BTN_NEXT) ? a.isEqual(c.paginator.visiblePageIdx - c.paginator.pageFirstIdx, q - 1) ? h(c.paginator.pageFirstIdx + q, b) : i(c.paginator.visiblePageIdx + 1, c.paginator.pageFirstIdx) : a.isEqual(b, c.config.PAGINATOR_BTN_NEXT_SET) && h(c.paginator.pageFirstIdx + q, b)
      }

      function g(a) {
        c.totalPages = Math.ceil(a / c.pageSize.rows)
      }

      function h(b, d) {
        var e = 0, f = 0;
        if (b > c.paginator.visiblePageIdx)if (e = b, a.isEqual(d, c.config.PAGINATOR_BTN_LAST))f = e - q + 1; else {
          var g = j(b);
          f = a.isEqual(g, b) ? b : g
        } else if (b < c.paginator.visiblePageIdx && !a.isEqual(d, c.config.PAGINATOR_BTN_FIRST)) {
          var g = k(b);
          e = b + q - 1, f = a.isEqual(g, b) ? b : g
        }
        i(e, f)
      }

      function i(a, b) {
        c.paginator = {visiblePageIdx: a, pageFirstIdx: b}, l()
      }

      function j(a) {
        return a + q > c.totalPages ? c.totalPages - q : a
      }

      function k(a) {
        return 0 > a ? 0 : a
      }

      function l() {
        q = c.totalPages > p ? p : c.totalPages;
        var a = c.paginator.visiblePageIdx !== c.paginator.pageFirstIdx ? c.paginator.pageFirstIdx : c.paginator.visiblePageIdx;
        c.paginatorButtons.length = 0, c.options.paginator.allNavBtnVisible && c.paginatorButtons.push(c.config.PAGINATOR_BTN_FIRST), c.options.paginator.pageNavBtnVisible && c.paginatorButtons.push(c.config.PAGINATOR_BTN_BACK), c.options.paginator.setNavBtnVisible && c.paginatorButtons.push(c.config.PAGINATOR_BTN_PREV_SET);
        for (var b = a; q + a > b; b++)c.paginatorButtons.push({id: b + 1, label: b + 1});
        c.options.paginator.setNavBtnVisible && c.paginatorButtons.push(c.config.PAGINATOR_BTN_NEXT_SET), c.options.paginator.pageNavBtnVisible && c.paginatorButtons.push(c.config.PAGINATOR_BTN_NEXT), c.options.paginator.allNavBtnVisible && c.paginatorButtons.push(c.config.PAGINATOR_BTN_LAST), m()
      }

      function m() {
        c.disabledButtons.length = 0, a.isEqual(c.paginator.visiblePageIdx, 0) && (c.disabledButtons.push(c.config.PAGINATOR_BTN_FIRST), c.disabledButtons.push(c.config.PAGINATOR_BTN_BACK)), a.isEqual(c.paginator.pageFirstIdx, 0) && c.disabledButtons.push(c.config.PAGINATOR_BTN_PREV_SET), c.paginator.pageFirstIdx + q >= c.totalPages && c.disabledButtons.push(c.config.PAGINATOR_BTN_NEXT_SET), c.paginator.visiblePageIdx >= c.totalPages - 1 && (c.disabledButtons.push(c.config.PAGINATOR_BTN_LAST), c.disabledButtons.push(c.config.PAGINATOR_BTN_NEXT))
      }

      function n() {
        g(c.totalCount), i(0, 0)
      }

      function o() {
        c.pageSizeOptions = c.options.paginator.pageSizeOptions, p = c.options.paginator.buttonCount > c.config.PAGINATOR_MAX_BTN_COUNT ? c.config.PAGINATOR_MAX_BTN_COUNT : c.options.paginator.buttonCount;
        var a = 0;
        for (var b in c.pageSizeOptions)if (c.pageSizeOptions[b].hasOwnProperty("default") && angular.equals(c.pageSizeOptions[b]["default"], !0)) {
          a = b;
          break
        }
        c.pageSize = c.pageSizeOptions[a], n()
      }

      c.paginator = {visiblePageIdx: 0, pageFirstIdx: 0}, c.paginatorButtons = [], c.disabledButtons = [];
      var p = 0, q = 0;
      c.pageSizeButtonClick = function (a) {
        c.pageSize = c.pageSizeOptions[c.pageSizeOptions.indexOf(a)], n(), c.extDataPagination && c.paginationOperation(b.EXT_BTN)
      }, c.paginatorBtnClick = function (a, d) {
        c.isDisabledBtn(a) || (c.isNavigateBtn(a) ? f(a) : i(a.id - 1, c.paginator.pageFirstIdx, d - 2), c.extDataPagination && c.paginationOperation(b.EXT_BTN))
      }, c.isNavigateBtn = function (b) {
        return a.isEqual(b, c.config.PAGINATOR_BTN_FIRST) || a.isEqual(b, c.config.PAGINATOR_BTN_BACK) || a.isEqual(b, c.config.PAGINATOR_BTN_PREV_SET) || a.isEqual(b, c.config.PAGINATOR_BTN_NEXT) || a.isEqual(b, c.config.PAGINATOR_BTN_NEXT_SET) || a.isEqual(b, c.config.PAGINATOR_BTN_LAST)
      }, c.isDisabledBtn = function (b) {
        return c.isNavigateBtn(b) && !a.isEqual(c.disabledButtons.indexOf(b), -1)
      }, c.$on(b.PAGINATOR_EVENT, function () {
        n()
      }), c.$on("$destroy", function () {
        c.$off(b.PAGINATOR_EVENT)
      }), o()
    }
  }
}]).directive("colToggleMenu", function () {
  return {
    restrict: "A", scope: !1, templateUrl: "templates/vscoltogglemenu.html", link: function (a, b, c) {
      a.colTogglerShowClicked = function (b) {
        a.checkEvent(b) && (a.colTogglerShow = !a.colTogglerShow)
      }, a.colToggleMenuClicked = function (b, c) {
        a.checkEvent(b) && (a.visibleColCount = c.visible ? a.visibleColCount - 1 : a.visibleColCount + 1, c.visible = !c.visible)
      }
    }
  }
}).directive("overlayWindow", ["$compile", "$timeout", function (a, b) {
  return {
    restrict: "A", scope: !1, link: function (c, d, e) {
      function f() {
        var f = c.$eval(e.overlayWindow);
        j = b(function () {
          f.overflow ? d[0].scrollWidth > d[0].offsetWidth && (i = angular.element('<div class="overlay" ng-click="closeOverlay()" style="margin-top:' + -d.prop("offsetHeight") + 'px">' + f.text + "</div>")) : i = angular.element('<div class="overlay" style="margin-left:' + d.prop("offsetLeft") + 'px;">' + f.text + "</div>"), angular.equals(i, null) || (d.append(i), a(i)(c))
        }, c.config.OVERLAY_SHOW_DELAY)
      }

      function g() {
        h(), angular.equals(i, null) || (i.remove(), i = null)
      }

      function h() {
        b.cancel(j), j = null
      }

      var i = null, j = null;
      d.on("mouseenter", f), d.on("mouseleave", g), c.$on("$destroy", function () {
        d.off("mouseenter", f), d.off("mouseleave", g)
      }), c.closeOverlay = function () {
        g()
      }
    }
  }
}]);