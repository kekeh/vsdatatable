/* 
 *  Name: vsdatatable
 *  Description: Simple single page datatable - AngularJS reusable UI component
 *  Version: 0.0.3
 *  Author: kekeh
 *  Homepage: http://kekeh.github.io/vsdatatable
 *  License: MIT
 *  Date: 2015-07-06
 */
angular.module('template-vsdatatable-0.0.3.html', ['templates/vscoltogglemenu.html', 'templates/vsdatatable.html', 'templates/vspaginator.html']);

angular.module("templates/vscoltogglemenu.html", []).run(["$templateCache", function ($templateCache) {
  $templateCache.put("templates/vscoltogglemenu.html",
      "<div>\n" +
      "    <span class=\"icon icon-selections actionIcon\" ng-click=\"colTogglerShowClicked($event)\"\n" +
      "          ng-keydown=\"colTogglerShowClicked($event)\"\n" +
      "          tabindex=\"0\" vstooltip=\"{{options.columnToggler.btnTooltip}}\"></span>\n" +
      "    <div class=\"colTogglerMenu\" ng-show=\"colTogglerShow\">\n" +
      "        <div class=\"colTogglerTitle\" ng-show=\"options.columnToggler.menuTitle !== undefined\">\n" +
      "            <span class=\"colTogglerTitleTxt\">{{options.columnToggler.menuTitle}}</span> \n" +
      "            <span class=\"icon icon-cross actionIcon colTogglerCloseIcon\" ng-click=\"colTogglerShowClicked($event)\"\n" +
      "                  ng-keydown=\"colTogglerShowClicked($event)\" tabindex=\"0\"></span>\n" +
      "        </div>\n" +
      "        <div class=\"colTogglerMenuItem\" ng-repeat=\"h in options.columns\" ng-class=\"{'selectedColTogglerMenuItem':h.visible}\"\n" +
      "             ng-click=\"colToggleMenuClicked($event,h)\"\n" +
      "             ng-keydown=\"colToggleMenuClicked($event,h)\"\n" +
      "             ng-model=\"h.visible\" tabindex=\"0\">\n" +
      "            <div class=\"colTogglerMenuItemTxt\">{{h.label}}</div>\n" +
      "            <div class=\"colTogglerMenuItemIcon\">\n" +
      "                <span class=\"icon icon-check actionIcon\" ng-show=\"h.visible\"></span>\n" +
      "            </div>\n" +
      "        </div>\n" +
      "    </div>\n" +
      "</div>\n" +
      "\n" +
      "");
}]);

angular.module("templates/vsdatatable.html", []).run(["$templateCache", function ($templateCache) {
  $templateCache.put("templates/vsdatatable.html",
      "<div class=\"vsdatatable\" ng-style=\"{'pointer-events':busyIcon?'none':'auto'}\">\n" +
      "\n" +
      "    <div class=\"busyIconContainer\" ng-if=\"options.busyIcon.visible && busyIcon\">\n" +
      "        <div class=\"busyIcon\"></div>\n" +
      "        <div class=\"busyIconTxt\">{{options.busyIcon.text}}</div>\n" +
      "    </div>\n" +
      "\n" +
      "    <div ng-style=\"{'opacity':busyIcon?'0.4':'1'}\">\n" +
      "        <div class=\"caption\" ng-show=\"options.caption.visible\">\n" +
      "            <table style=\"width:100%;\">\n" +
      "                <tr>\n" +
      "                    <td class=\"captionColToggler\" ng-show=\"options.columnToggler.visible\"\n" +
      "                        ng-click=\"$event.stopPropagation()\">\n" +
      "                        <div col-toggle-menu></div>\n" +
      "                    </td>\n" +
      "                    <td class=\"captionTitle\">\n" +
      "                        <span ng-if=\"options.caption.text!==undefined\">{{options.caption.text}}</span>\n" +
      "                    </td>\n" +
      "                    <td class=\"captionFilter\">\n" +
      "                        <div ng-show=\"options.filter.global!==undefined&&options.filter.global||\n" +
      "                                      options.filter.column!==undefined&&options.filter.column\">\n" +
      "                            <input ng-show=\"filterFocus&&options.filter.global\"\n" +
      "                                   placeholder=\"{{options.filter.globalPlaceholder}}\"\n" +
      "                                   type=\"text\"\n" +
      "                                   ng-model=\"globalFilter\"\n" +
      "                                   ng-model-options=\"{debounce:options.filter.autoFilter.useAutoFilter?options.filter.autoFilter.filterDelay:config.FILTER_EXECUTION_DELAY}\"\n" +
      "                                   data-ng-trim=\"false\"\n" +
      "                                   filter-focus/>\n" +
      "                            <span class=\"icon icon-check actionIcon\"\n" +
      "                                  ng-show=\"{{filterFocus&&options.filter.global&&options.filter.filterBtn.visible}}\"\n" +
      "                                  vstooltip=\"{{options.filter.filterBtn.filterBtnTooltip}}\"\n" +
      "                                  ng-click=\"executeFilter();\" ng-keydown=\"checkEvent($event)?executeFilter():null\"\n" +
      "                                  tabindex=\"0\"></span>\n" +
      "                            <span class=\"icon icon-search actionIcon\"\n" +
      "                                  vstooltip=\"{{!filterFocus?options.filter.showFilterBtnTooltip:options.filter.hideFilterBtnTooltip}}\"\n" +
      "                                  ng-click=\"filterBtnClick($event)\"\n" +
      "                                  ng-keydown=\"filterBtnClick($event)\"\n" +
      "                                  tabindex=\"0\"></span>\n" +
      "                        </div>\n" +
      "                    </td>\n" +
      "                </tr>\n" +
      "            </table>\n" +
      "        </div>\n" +
      "\n" +
      "        <table class=\"tableRows\">\n" +
      "            <thead class=\"tableHeader\" ng-if=\"options.headerVisible\">\n" +
      "            <tr class=\"headerRow\">\n" +
      "                <th class=\"headerCol textOverflow\"\n" +
      "                    col-resizer\n" +
      "                    ng-if=\"h.visible===undefined||h.visible\"\n" +
      "                    ng-style=\"{'width':h.width.number+h.width.unit, 'cursor':h.sorting?'pointer':'default'}\"\n" +
      "                    ng-class=\"sort.col===h.prop&&h.sorting?'selectedHeaderCol':''\"\n" +
      "                    ng-repeat=\"h in options.columns\"\n" +
      "                    ng-click=\"h.sorting?sortByCol($event,h.prop):null\"\n" +
      "                    ng-keydown=\"h.sorting?sortByCol($event,h.prop):null\">\n" +
      "                    {{h.label}}\n" +
      "                            <span class=\"icon sortColIcon\" ng-if=\"h.sorting\"\n" +
      "                                  ng-class=\"{'selectedHeaderCol':sort.col===h.prop&&h.sorting,\n" +
      "                                  'icon-sort':h.sorting&&sort.col!==h.prop,\n" +
      "                                  'icon-down':sort.col===h.prop&&sort.reverse,\n" +
      "                                  'icon-up':sort.col===h.prop&&!sort.reverse}\" tabindex=\"0\"></span>\n" +
      "                            <span class=\"icon icon-cross sortColIcon\" ng-if=\"h.sorting&&sort.col===h.prop\"\n" +
      "                                  ng-click=\"sortByCol($event,'')\" ng-keydown=\"sortByCol($event,'')\" tabindex=\"0\"></span>\n" +
      "                </th>\n" +
      "                <th id=\"headerColAction\" class=\"headerCol headerColAction\" ng-if=\"options.useTemplates\"\n" +
      "                    ng-style=\"{'width': config.DEFAULT_ACTION_COL_WIDTH + 'px'}\">\n" +
      "                    <span>{{options.actionColumnText}}</span>\n" +
      "                            <span class=\"icon icon-plus actionIcon addItemIcon\"\n" +
      "                                  ng-if=\"options.templates.add.actionBtnShow\"\n" +
      "                                  ng-click=\"addRow();\" ng-keydown=\"checkEvent($event)?addRow():null\"\n" +
      "                                  vstooltip=\"{{options.templates.add.btnTooltip}}\"\n" +
      "                                  tabindex=\"0\"></span>\n" +
      "                </th>\n" +
      "            </tr>\n" +
      "\n" +
      "            <tr ng-if=\"options.filter.column!==undefined&&options.filter.column&&filterFocus\">\n" +
      "                <th class=\"headerCol\" ng-repeat=\"h in options.columns\" ng-show=\"h.visible===undefined||h.visible\"\n" +
      "                    col-filter-template=\"h\">\n" +
      "                </th>\n" +
      "                <th class=\"headerCol headerColAction\"></th>\n" +
      "            </tr>\n" +
      "\n" +
      "            </thead>\n" +
      "            <tbody class=\"tableBody\">\n" +
      "            <tr class=\"bodyRow\" ng-repeat=\"obj in !extDataPagination?\n" +
      "                            filteredItems.slice(paginator.visiblePageIdx*pageSize.rows, paginator.visiblePageIdx*pageSize.rows+pageSize.rows):\n" +
      "                            filteredItems track by $index\"\n" +
      "                ng-class-odd=\"'oddRow'\" ng-class-even=\"'evenRow'\"\n" +
      "                ng-click=\"rowClicked($event, obj)\"\n" +
      "                ng-keydown=\"rowClicked($event, obj)\"\n" +
      "                ng-class=\"{'selectedRow':isRowSelected(obj)}\"\n" +
      "                table-body-row tabindex=\"0\">\n" +
      "                <td class=\"bodyCol textOverflow\" ng-repeat=\"col in options.columns track by $index\"\n" +
      "                    ng-if=\"options.columns[$index].visible===undefined||options.columns[$index].visible\"\n" +
      "                    ng-style=\"{'text-align':col.textAlign}\"\n" +
      "                    overlay-window=\"{{getPropertyValue(obj,col.prop)}}\"\n" +
      "                    ng-class=\"getColumnStyle(obj,col)\">\n" +
      "                    {{getPropertyValue(obj,col.prop)}}\n" +
      "                </td>\n" +
      "                <td class=\"bodyCol bodyColAction\" ng-if=\"options.useTemplates\">\n" +
      "                            <span class=\"icon icon-edit actionIcon\" ng-if=\"options.templates.edit.actionBtnShow\"\n" +
      "                                  ng-click=\"editRow($event, obj);$event.stopPropagation()\"\n" +
      "                                  ng-keydown=\"editRow($event, obj);$event.stopPropagation()\"\n" +
      "                                  vstooltip=\"{{options.templates.edit.btnTooltip}}\"\n" +
      "                                  tabindex=\"0\"></span>\n" +
      "                            <span class=\"icon icon-clear actionIcon\" ng-if=\"options.templates.delete.actionBtnShow\"\n" +
      "                                  ng-click=\"deleteRow($event, obj);$event.stopPropagation()\"\n" +
      "                                  ng-keydown=\"deleteRow($event, obj);$event.stopPropagation()\"\n" +
      "                                  vstooltip=\"{{options.templates.delete.btnTooltip}}\"\n" +
      "                                  tabindex=\"0\"></span>\n" +
      "                            <span class=\"icon icon-view actionIcon\" ng-if=\"options.templates.view.actionBtnShow\"\n" +
      "                                  ng-click=\"viewRow($event, obj);$event.stopPropagation()\"\n" +
      "                                  ng-keydown=\"viewRow($event, obj);$event.stopPropagation()\"\n" +
      "                                  vstooltip=\"{{options.templates.view.btnTooltip}}\"\n" +
      "                                  tabindex=\"0\"></span>\n" +
      "                </td>\n" +
      "            </tr>\n" +
      "            </tbody>\n" +
      "        </table>\n" +
      "\n" +
      "        <div class=\"tableFooter\" table-paginator></div>\n" +
      "    </div>\n" +
      "\n" +
      "</div>");
}]);

angular.module("templates/vspaginator.html", []).run(["$templateCache", function ($templateCache) {
  $templateCache.put("templates/vspaginator.html",
      "<table style=\"width: 100%;\">\n" +
      "    <tbody>\n" +
      "    <tr class=\"paginator\" ng-if=\"options.paginator.visible\">\n" +
      "        <td>\n" +
      "            <div style=\"float:left;\">\n" +
      "                <span class=\"paginatorTxt\">{{options.paginator.totalItemsTxt}}</span>\n" +
      "                <span class=\"paginatorTotalNbr\">{{totalCount}}</span>\n" +
      "                <span class=\"paginatorPagesNbr\" ng-if=\"options.paginator.visible\">({{paginator.visiblePageIdx+1}}/{{totalPages===0?1:totalPages}})</span>\n" +
      "            </div>\n" +
      "        </td>\n" +
      "        <td>\n" +
      "            <button class=\"paginatorBtn\"\n" +
      "                    ng-style=\"{'margin-left':$index>0?'-1px':'0'}\"\n" +
      "                    ng-class=\"{'selectedPaginatorBtn':b.id===paginator.visiblePageIdx+1,\n" +
      "                                   'disabledPaginatorBtn':isDisabledBtn(b),\n" +
      "                                   'paginatorBtnNbr': !isNavigateBtn(b),\n" +
      "                                   'paginatorBtnSet': b===btnPrevSet||b===btnNextSet,\n" +
      "                                   'paginatorBtnAll': b===btnFirst||b===btnLast}\"\n" +
      "                    ng-click=\"paginatorBtnClick(b,$index)\"\n" +
      "                    ng-repeat=\"b in paginatorButtons track by $index\">\n" +
      "                {{b.label}}\n" +
      "            </button>\n" +
      "        </td>\n" +
      "        <td>\n" +
      "            <div style=\"float:right;\">\n" +
      "                <span class=\"paginatorTxt\">{{options.paginator.pageSizeTxt}}</span>\n" +
      "                <button class=\"paginatorBtn paginatorBtnPageSize\"\n" +
      "                        ng-style=\"{'margin-left':$index>0?'-1px':'0'}\"\n" +
      "                        ng-class=\"{'selectedPaginatorBtn':o.rows===pageSize.rows}\"\n" +
      "                        ng-click=\"pageSizeButtonClick(o)\"\n" +
      "                        ng-repeat=\"o in pageSizeOptions track by $index\">{{o.label}}\n" +
      "                </button>\n" +
      "            </div>\n" +
      "        </td>\n" +
      "    </tr>\n" +
      "    </tbody>\n" +
      "</table>\n" +
      "\n" +
      "");
}]);

angular.module("vsdatatable", ["template-vsdatatable-0.0.3.html"]).constant("vsdatatableConfig", {
  OVERLAY_SHOW_DELAY: 500,
  TOOLTIP_SHOW_DELAY: 500,
  TOOLTIP_CLOSE_DELAY: 1200,
  FILTER_EXECUTION_DELAY: 500,
  PAGINATOR_MAX_BTN_COUNT: 6,
  PAGINATOR_EVENT: "vsdatatable.paginatorEvent",
  FILTER_FOCUS_EVENT: "vsdatatable.filterFocusEvent",
  SET_EXT_PAGINATION_DATA_EVENT: "vsdatatable.setExtPaginationData",
  OPER_PHASE_BEGIN: "BEGIN",
  OPER_PHASE_END: "END",
  OPER_ADD: "ADD",
  OPER_EDIT: "EDIT",
  OPER_DELETE: "DELETE",
  OPER_VIEW: "VIEW",
  EXT_INIT: "i",
  EXT_SORT: "s",
  EXT_FLT: "f",
  EXT_BTN: "b",
  FILTER_CONTAIN: "contain",
  FILTER_EXACT: "exact",
  ROW_SELECT: "SELECT",
  ROW_DESELECT: "DESELECT",
  COL_RESIZER_MIN_COL_WIDTH: 35,
  DEFAULT_ACTION_COL_WIDTH: 90,
  COLUMN_PROP_VALUE: "COLUMN_PROP_VALUE",
  DOT_SEPARATOR: "."
}).run(function (a) {
  a.put("rowExtender.html", '<td class="bodyCol" colspan="{{visibleColCount+1}}"><div ng-include src="template.path"></div></td>')
}).factory("vsdatatableEvent", ["vsdatatableConfig", function (a) {
  var b = {};
  return b.setExtPaginationData = function (b, c, d) {
    b.$broadcast(a.SET_EXT_PAGINATION_DATA_EVENT, {data: c, totalCount: d})
  }, b
}]).service("vsdatatableService", ["vsdatatableConfig", function (a) {
  var b = {};
  return b.isUndefined = function (a) {
    return angular.isUndefined(a)
  }, b.isEqual = function (a, b) {
    return angular.equals(a, b)
  }, b.isObject = function (a) {
    return angular.isObject(a)
  }, b.setFilterFocus = function (b) {
    b.$broadcast(a.FILTER_FOCUS_EVENT)
  }, b.paginatorEvent = function (b) {
    b.$broadcast(a.PAGINATOR_EVENT)
  }, b
}]).directive("vsdatatable", ["$compile", "$templateCache", "$filter", "vsdatatableConfig", "vsdatatableService", function (a, b, c, d, e) {
  return {
    restrict: "EA",
    templateUrl: "templates/vsdatatable.html",
    scope: {options: "="},
    controller: ["$scope", function (a) {
      a.config = d, a.colInitDone = !1, a.filteredItems = [], a.totalCount = 0, a.selectedRows = [], a.colTogglerShow = !1
    }],
    link: function (d, f, g) {
      function h(a) {
        if (e.isEqual(d.options.row.selection, 1) || e.isEqual(d.options.row.selection, 2)) {
          var b = d.selectedRows.indexOf(a);
          e.isEqual(b, -1) || (d.selectedRows.splice(b, 1), d.notifyRowSelect(d.config.ROW_DESELECT, a))
        }
      }

      function i(a) {
        angular.forEach(a, function (b, c) {
          a[c] = ""
        })
      }

      function j(a) {
        var b = {};
        return angular.forEach(a, function (a, c) {
          e.isEqual(a, "") || (b[c] = a)
        }), b
      }

      function k() {
        d.filteredItems = d.options.data.items, e.isEqual(d.globalFilter, "") || (d.filteredItems = F(d.filteredItems, d.globalFilter));
        var a = j(d.columnFilter.contain);
        e.isEqual(a, {}) || (d.filteredItems = F(d.filteredItems, a));
        var b = j(d.columnFilter.exact);
        e.isEqual(b, {}) || (d.filteredItems = F(d.filteredItems, b, function (a, b) {
          return e.isEqual(a.toString(), b) || e.isEqual(b, "")
        })), d.totalCount = d.filteredItems.length
      }

      function l() {
        e.isEqual(d.sort.col, "") || (d.filteredItems = E(d.filteredItems, d.sort.col, d.sort.reverse))
      }

      function m() {
        if (d.options.filter.global && (B = d.$watch("filterFocus", o)), d.options.filter.global || d.options.filter.column) {
          var a = n();
          d.options.filter.autoFilter.useAutoFilter && (a += "globalFilter", C = d.$watch(a, p))
        }
        d.extDataPagination || (D = d.$watch("options.data.items.length", q))
      }

      function n() {
        var a = "";
        return angular.forEach(d.options.columns, function (b) {
          e.isUndefined(b.filter) || e.isUndefined(b.filter.template) || (a += "columnFilter." + b.filter.match + d.config.DOT_SEPARATOR + b.prop + " + ")
        }), a
      }

      function o(a, b) {
        !e.isEqual(a, b) && a && e.setFilterFocus(d)
      }

      function p(a, b) {
        e.isObject(a) && e.isEqual(b.contain, {}) && e.isEqual(b.exact, {}) || e.isEqual(a, b) || d.executeFilter()
      }

      function q() {
        d.filteredItems = d.options.data.items, d.totalCount = d.filteredItems.length, v(!0, !0), e.paginatorEvent(d)
      }

      function r(a) {
        return angular.element(a.target).parent().parent()
      }

      function s(c) {
        t(), z = angular.element(b.get("rowExtender.html")), e.isEqual(A.oper, d.config.OPER_ADD) ? c.prepend(z) : c.after(z), a(z)(d)
      }

      function t() {
        e.isEqual(z, null) || (z.remove(), z = null)
      }

      function u(a) {
        e.isUndefined(d.options.data.dataOperationCb) || d.options.data.dataOperationCb(a, A.oper, A.dataOld, e.isEqual(a, d.config.OPER_PHASE_BEGIN) ? {} : A.dataNew)
      }

      function v(a, b) {
        a && (d.sort = {col: "", reverse: !1}), b && d.resetFilter()
      }

      function w() {
        var a = 90 / d.options.columns.length;
        d.visibleColCount = 0, angular.forEach(d.options.columns, function (b) {
          d.visibleColCount = e.isUndefined(b.visible) || b.visible ? d.visibleColCount + 1 : d.visibleColCount, e.isUndefined(b.width) && (b.width = {
            number: a,
            unit: "%"
          })
        })
      }

      function x() {
        d.extDataPagination = d.options.data.extDataPagination, m(), w()
      }

      d.filterFocus = !1, d.busyIcon = !1, d.sort = {
        col: "",
        reverse: !1
      }, d.globalFilter = "", d.columnFilter = {contain: {}, exact: {}};
      var y = null, z = null, A = {}, B = null, C = null, D = null, E = c("orderBy"), F = c("filter");
      d.addRow = function () {
        A = {
          oper: d.config.OPER_ADD,
          dataOld: {},
          dataNew: e.isUndefined(d.options.templates.add.defaultValues) ? {} : angular.copy(d.options.templates.add.defaultValues)
        }, u(d.config.OPER_PHASE_BEGIN), d.template = d.options.templates.add;
        var a = angular.element(f[0].querySelector(".tableRows .tableBody"));
        s(a)
      }, d.editRow = function (a, b) {
        d.checkEvent(a) && (A = {
          oper: d.config.OPER_EDIT,
          dataOld: b,
          dataNew: angular.copy(b)
        }, u(d.config.OPER_PHASE_BEGIN), d.template = d.options.templates.edit, s(r(a)))
      }, d.deleteRow = function (a, b) {
        d.checkEvent(a) && (A = {
          oper: d.config.OPER_DELETE,
          dataOld: b,
          dataNew: {}
        }, u(d.config.OPER_PHASE_BEGIN), d.template = d.options.templates["delete"], s(r(a)))
      }, d.viewRow = function (a, b) {
        d.checkEvent(a) && (A = {
          oper: d.config.OPER_VIEW,
          dataOld: b,
          dataNew: {}
        }, u(d.config.OPER_PHASE_BEGIN), d.template = d.options.templates.view, s(r(a)))
      }, d.acceptClicked = function () {
        t(), d.extDataPagination ? (u(d.config.OPER_PHASE_END), e.isEqual(A.oper, d.config.OPER_VIEW) || d.paginationOperation(A.oper)) : ((e.isEqual(A.oper, d.config.OPER_ADD) || e.isEqual(A.oper, d.config.OPER_DELETE)) && d.resetFilter(), u(d.config.OPER_PHASE_END), e.isEqual(A.oper, d.config.OPER_VIEW) || k()), h(A.dataOld)
      }, d.cancelClicked = function () {
        t()
      }, d.sortByCol = function (a, b) {
        a.stopPropagation(), d.checkEvent(a) && (d.sort = e.isEqual(d.sort.col, b) ? {
          col: b,
          reverse: !d.sort.reverse
        } : {
          col: b,
          reverse: !1
        }, d.extDataPagination || (e.isEqual(b, "") && k(), l()), d.paginationOperation(d.config.EXT_SORT))
      }, d.notifyRowSelect = function (a, b) {
        e.isUndefined(d.options.row.rowSelectCb) || d.options.row.rowSelectCb(a, b)
      }, d.$on(d.config.SET_EXT_PAGINATION_DATA_EVENT, function (a, b) {
        d.filteredItems = b.data, d.totalCount = b.totalCount, e.isEqual(y, d.config.EXT_BTN) || e.isEqual(y, d.config.OPER_EDIT) || e.isEqual(y, d.config.EXT_SORT) || e.paginatorEvent(d), d.options.busyIcon.visible && (d.busyIcon = !1)
      }), d.getColumns = function () {
        return d.options.columns
      }, d.getOperationDataObject = function () {
        return e.isEqual(A.oper, d.config.OPER_ADD) || e.isEqual(A.oper, d.config.OPER_EDIT) ? {
          oper: A.oper,
          data: A.dataNew
        } : {oper: A.oper, data: A.dataOld}
      }, d.getPropertyValue = function (a, b) {
        if (e.isEqual(b.indexOf(d.config.DOT_SEPARATOR), -1))return a[b];
        var c = b.split(d.config.DOT_SEPARATOR), f = angular.copy(a);
        return angular.forEach(c, function (a) {
          f = f[a]
        }), f
      }, d.getColumnStyle = function (a, b) {
        if (!e.isUndefined(b.rules)) {
          var c = "";
          for (var f in b.rules) {
            var g = d.getPropertyValue(a, b.rules[f].prop), h = angular.copy(b.rules[f].expression.toString());
            if (h = h.split(b.rules[f].prop).join(g.toString()), d.$eval(h)) {
              c = b.rules[f].style;
              break
            }
          }
          return c
        }
      }, d.paginationOperation = function (a) {
        d.extDataPagination && (d.options.busyIcon.visible && (d.busyIcon = !0), y = a, (e.isEqual(a, d.config.OPER_ADD) || e.isEqual(a, d.config.OPER_DELETE) || e.isEqual(a, d.config.EXT_FLT)) && (d.paginator.visiblePageIdx = 0), d.options.data.extPaginationOperationCb({
          columnFilter: d.columnFilter,
          globalFilter: d.globalFilter,
          page: d.paginator.visiblePageIdx + 1,
          pageSize: d.pageSize.rows,
          sort: d.sort
        }))
      }, d.filterBtnClick = function (a) {
        d.checkEvent(a) && (d.filterFocus = !d.filterFocus, d.filterFocus || d.resetFilter())
      }, d.executeFilter = function () {
        d.extDataPagination ? d.paginationOperation(d.config.EXT_FLT) : (k(), l(), e.paginatorEvent(d))
      }, d.resetFilter = function () {
        d.globalFilter = "", i(d.columnFilter.contain), i(d.columnFilter.exact), d.options.filter.autoFilter.useAutoFilter || d.executeFilter()
      }, d.checkEvent = function (a) {
        return (e.isEqual(a.which, 1) || e.isEqual(a.which, 13)) && !d.busyIcon
      };
      var G = f.on("click", function (a) {
        1 === a.which && d.colTogglerShow && (d.colTogglerShow = !1, d.$apply())
      });
      d.$on("$destroy", function () {
        e.isEqual(B, null) || B(), e.isEqual(C, null) || C(), e.isEqual(D, null) || D(), d.$off(d.config.SET_EXT_PAGINATION_DATA_EVENT), f.off("click", G)
      }), x()
    }
  }
}]).directive("filterFocus", ["$timeout", function (a) {
  return {
    restrict: "A", scope: !1, link: function (b, c, d) {
      b.$on(b.config.FILTER_FOCUS_EVENT, function () {
        a(function () {
          c[0].focus()
        })
      }), b.$on("$destroy", function () {
        b.$off(b.config.FILTER_FOCUS_EVENT)
      })
    }
  }
}]).directive("colFilterTemplate", ["$compile", "vsdatatableService", function (a, b) {
  return {
    restrict: "A", scope: !1, link: function (c, d, e) {
      function f() {
        var f = c.$eval(e.colFilterTemplate);
        if (!b.isUndefined(f.filter) && !b.isUndefined(f.filter.template) && !b.isUndefined(f.filter.match)) {
          var g = angular.copy(f.filter.template);
          g = g.replace(c.config.COLUMN_PROP_VALUE, "columnFilter" + c.config.DOT_SEPARATOR + f.filter.match + c.config.DOT_SEPARATOR + f.prop + '"');
          var h = angular.element(g);
          a(h)(c), d.append(h)
        }
      }

      f()
    }
  }
}]).directive("tableBodyRow", ["vsdatatableService", function (a) {
  return {
    restrict: "A", scope: !1, link: function (b, c, d) {
      function e(c) {
        return (a.isEqual(c.which, 1) || a.isEqual(c.which, 13)) && (1 === b.options.row.selection || 2 === b.options.row.selection)
      }

      function f() {
        c.addClass("hoverRow")
      }

      function g() {
        c.removeClass("hoverRow")
      }

      b.options.row.hover && (c.on("mouseenter", f), c.on("mouseleave", g)), b.rowClicked = function (c, d) {
        if (e(c)) {
          var f = b.config.ROW_SELECT, g = b.selectedRows.indexOf(d);
          1 === b.options.row.selection && a.isEqual(g, -1) ? (b.selectedRows.length > 0 && b.notifyRowSelect(b.config.ROW_DESELECT, b.selectedRows[0]), b.selectedRows[0] = d) : 1 !== b.options.row.selection || a.isEqual(g, -1) ? 2 === b.options.row.selection && a.isEqual(g, -1) ? b.selectedRows.push(d) : 2 !== b.options.row.selection || a.isEqual(g, -1) || (b.selectedRows.splice(g, 1), f = b.config.ROW_DESELECT) : (b.selectedRows.splice(0, 1), f = b.config.ROW_DESELECT), b.notifyRowSelect(f, d)
        }
      }, b.isRowSelected = function (c) {
        return !a.isEqual(b.selectedRows.indexOf(c), -1)
      }, b.$on("$destroy", function () {
        b.options.row.hover && (c.off("mouseenter", f), c.off("mouseleave", g))
      })
    }
  }
}]).directive("tablePaginator", ["vsdatatableService", function (a) {
  return {
    restrict: "A", scope: !1, templateUrl: "templates/vspaginator.html", link: function (b, c, d) {
      function e(c) {
        a.isEqual(c, b.btnFirst) ? g(0, c) : a.isEqual(c, b.btnPrev) ? a.isEqual(b.paginator.visiblePageIdx - b.paginator.pageFirstIdx, 0) ? g(b.paginator.visiblePageIdx - p, c) : h(b.paginator.visiblePageIdx - 1, b.paginator.pageFirstIdx) : a.isEqual(c, b.btnPrevSet) ? g(b.paginator.pageFirstIdx - p, c) : a.isEqual(c, b.btnLast) ? g(b.totalPages - 1, c) : a.isEqual(c, b.btnNext) ? a.isEqual(b.paginator.visiblePageIdx - b.paginator.pageFirstIdx, p - 1) ? g(b.paginator.pageFirstIdx + p, c) : h(b.paginator.visiblePageIdx + 1, b.paginator.pageFirstIdx) : a.isEqual(c, b.btnNextSet) && g(b.paginator.pageFirstIdx + p, c)
      }

      function f(a) {
        b.totalPages = Math.ceil(a / b.pageSize.rows)
      }

      function g(c, d) {
        var e = 0, f = 0;
        if (c > b.paginator.visiblePageIdx)if (e = c, a.isEqual(d, b.btnLast))f = e - p + 1; else {
          var g = i(c);
          f = a.isEqual(g, c) ? c : g
        } else if (c < b.paginator.visiblePageIdx && !a.isEqual(d, b.btnFirst)) {
          var g = j(c);
          e = c + p - 1, f = a.isEqual(g, c) ? c : g
        }
        h(e, f)
      }

      function h(a, c) {
        b.paginator = {visiblePageIdx: a, pageFirstIdx: c}, k()
      }

      function i(a) {
        return a + p > b.totalPages ? b.totalPages - p : a
      }

      function j(a) {
        return 0 > a ? 0 : a
      }

      function k() {
        p = b.totalPages > o ? o : b.totalPages;
        var a = b.paginator.visiblePageIdx !== b.paginator.pageFirstIdx ? b.paginator.pageFirstIdx : b.paginator.visiblePageIdx;
        b.paginatorButtons.length = 0, b.options.paginator.firstLastBtn.visible && b.paginatorButtons.push(b.btnFirst), b.options.paginator.prevNextBtn.visible && b.paginatorButtons.push(b.btnPrev), b.options.paginator.prevNextSetBtn.visible && b.paginatorButtons.push(b.btnPrevSet);
        for (var c = a; p + a > c; c++)b.paginatorButtons.push({id: c + 1, label: c + 1});
        b.options.paginator.prevNextSetBtn.visible && b.paginatorButtons.push(b.btnNextSet), b.options.paginator.prevNextBtn.visible && b.paginatorButtons.push(b.btnNext), b.options.paginator.firstLastBtn.visible && b.paginatorButtons.push(b.btnLast), l()
      }

      function l() {
        b.disabledButtons.length = 0, a.isEqual(b.paginator.visiblePageIdx, 0) && (b.disabledButtons.push(b.btnFirst), b.disabledButtons.push(b.btnPrev)), a.isEqual(b.paginator.pageFirstIdx, 0) && b.disabledButtons.push(b.btnPrevSet), b.paginator.pageFirstIdx + p >= b.totalPages && b.disabledButtons.push(b.btnNextSet), b.paginator.visiblePageIdx >= b.totalPages - 1 && (b.disabledButtons.push(b.btnLast), b.disabledButtons.push(b.btnNext))
      }

      function m() {
        f(b.totalCount), h(0, 0)
      }

      function n() {
        b.btnPrev = {id: "b", label: b.options.paginator.prevNextBtn.labels[0]}, b.btnNext = {
          id: "n",
          label: b.options.paginator.prevNextBtn.labels[1]
        }, b.btnFirst = {id: "f", label: b.options.paginator.firstLastBtn.labels[0]}, b.btnLast = {
          id: "l",
          label: b.options.paginator.firstLastBtn.labels[1]
        }, b.btnPrevSet = {id: "ps", label: b.options.paginator.prevNextSetBtn.labels[0]}, b.btnNextSet = {
          id: "ns",
          label: b.options.paginator.prevNextSetBtn.labels[1]
        }, b.pageSizeOptions = b.options.paginator.pageSizeOptions, o = b.options.paginator.numberBtnCount > b.config.PAGINATOR_MAX_BTN_COUNT ? b.config.PAGINATOR_MAX_BTN_COUNT : b.options.paginator.numberBtnCount;
        var a = 0;
        for (var c in b.pageSizeOptions)if (b.pageSizeOptions[c].hasOwnProperty("default") && angular.equals(b.pageSizeOptions[c]["default"], !0)) {
          a = c;
          break
        }
        b.pageSize = b.pageSizeOptions[a], m()
      }

      b.paginator = {visiblePageIdx: 0, pageFirstIdx: 0}, b.paginatorButtons = [], b.disabledButtons = [];
      var o = 0, p = 0;
      b.pageSizeButtonClick = function (a) {
        b.pageSize = b.pageSizeOptions[b.pageSizeOptions.indexOf(a)], m(), b.extDataPagination && b.paginationOperation(b.config.EXT_BTN)
      }, b.paginatorBtnClick = function (a, c) {
        b.isDisabledBtn(a) || (b.isNavigateBtn(a) ? e(a) : h(a.id - 1, b.paginator.pageFirstIdx, c - 2), b.extDataPagination && b.paginationOperation(b.config.EXT_BTN))
      }, b.isNavigateBtn = function (c) {
        return a.isEqual(c, b.btnFirst) || a.isEqual(c, b.btnPrev) || a.isEqual(c, b.btnPrevSet) || a.isEqual(c, b.btnNext) || a.isEqual(c, b.btnNextSet) || a.isEqual(c, b.btnLast)
      }, b.isDisabledBtn = function (c) {
        return b.isNavigateBtn(c) && !a.isEqual(b.disabledButtons.indexOf(c), -1)
      }, b.$on(b.config.PAGINATOR_EVENT, function () {
        m()
      }), b.$on("$destroy", function () {
        b.$off(b.config.PAGINATOR_EVENT)
      }), n()
    }
  }
}]).directive("colToggleMenu", function () {
  return {
    restrict: "A", scope: !1, templateUrl: "templates/vscoltogglemenu.html", link: function (a, b, c) {
      a.colTogglerShowClicked = function (b) {
        a.checkEvent(b) && (a.colTogglerShow = !a.colTogglerShow)
      }, a.colToggleMenuClicked = function (b, c) {
        a.checkEvent(b) && (a.visibleColCount = c.visible ? a.visibleColCount - 1 : a.visibleColCount + 1, c.visible = !c.visible, a.colInitDone = !0)
      }
    }
  }
}).directive("overlayWindow", ["$compile", "$timeout", function (a, b) {
  return {
    restrict: "A", scope: !1, link: function (c, d, e) {
      function f() {
        d[0].scrollWidth > d[0].offsetWidth && (k = b(function () {
          j = angular.element('<div class="overlay" ng-click="closeOverlay($event)">' + e.overlayWindow + "</div>"), j.css("margin-top", "-20px"), j.css("margin-left", "14px"), d.append(j), a(j)(c)
        }, c.config.OVERLAY_SHOW_DELAY))
      }

      function g() {
        h(), angular.equals(j, null) || (j.remove(), j = null)
      }

      function h() {
        b.cancel(k), k = null
      }

      function i() {
        c.options.showOverlay && (d.on("mouseenter", f), d.on("mouseleave", g))
      }

      var j = null, k = null;
      c.closeOverlay = function (a) {
        a.stopPropagation(), g()
      }, c.$on("$destroy", function () {
        d.off("mouseenter", f), d.off("mouseleave", g)
      }), i()
    }
  }
}]).directive("vstooltip", ["$compile", "$timeout", function (a, b) {
  return {
    restrict: "A", scope: !1, link: function (c, d, e) {
      function f() {
        m = b(function () {
          h(), n = b(function () {
            i()
          }, c.config.TOOLTIP_CLOSE_DELAY, !0)
        }, c.config.TOOLTIP_SHOW_DELAY, !0)
      }

      function g() {
        j(), i()
      }

      function h() {
        l = angular.element('<div class="tooltip" style="margin-left:' + d.prop("offsetLeft") + 'px;">' + e.vstooltip + "</div>"), d.append(l), a(l)(c)
      }

      function i() {
        angular.equals(l, null) || (l.remove(), l = null)
      }

      function j() {
        b.cancel(m), b.cancel(n)
      }

      function k() {
        c.options.showTooltips && (d.on("mouseenter", f), d.on("mouseleave", g))
      }

      var l = null, m = null, n = null;
      c.$on("$destroy", function () {
        d.off("mouseenter", f), d.off("mouseleave", g)
      }), k()
    }
  }
}]).directive("colResizer", ["$compile", "$document", "vsdatatableService", function (a, b, c) {
  return {
    restrict: "A", scope: !1, link: function (d, e, f) {
      function g(a) {
        a.preventDefault(), n = a.clientX, o = e.next(), c.isEqual(o.prop("id"), "headerColAction") || (p = e.prop("offsetWidth"), q = o.prop("offsetWidth"), r = e.parent().prop("offsetWidth"), b.on("mousemove", h), b.on("mouseup", i), j("col-resize"))
      }

      function h(a) {
        var b = a.clientX - n, c = p + b, f = q - b;
        b > 0 && f < d.config.COL_RESIZER_MIN_COL_WIDTH || 0 > b && c < d.config.COL_RESIZER_MIN_COL_WIDTH || (e.css("width", c / r * 100 + "%"), o.css("width", f / r * 100 + "%"))
      }

      function i() {
        b.off("mousemove", h), b.off("mouseup", i), j("default")
      }

      function j(a) {
        b.prop("body").style.cursor = a
      }

      function k() {
        var a = 100 - d.config.DEFAULT_ACTION_COL_WIDTH / e.parent().prop("offsetWidth") * 100;
        return a / d.visibleColCount
      }

      function l() {
        var a = k();
        angular.forEach(d.options.columns, function (b) {
          b.visible && (b.width = {number: a, unit: "%"})
        })
      }

      function m() {
        if (d.options.columnResize) {
          var b = "position:absolute;border:1px solid transparent;background-color:transparent;top:0;bottom:0;right:0;width:6px;cursor:col-resize;", c = angular.element('<div class="colresizer" ng-click="$event.stopPropagation()" style="' + b + '"></div>');
          c.on("mousedown", g), e.css("background-clip", "padding-box"), e.css("position", "relative"), e.append(c), a(c)(d)
        }
        d.colInitDone && l()
      }

      var n = 0, o = 0, p = 0, q = 0, r = 0;
      d.$on("$destroy", function () {
        var a = e[0].querySelector(".colresizer");
        angular.element(a).off("mousedown", g), l()
      }), m()
    }
  }
}]);